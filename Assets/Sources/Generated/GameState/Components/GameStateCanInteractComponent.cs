//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public LamaGamma.Components.CanInteract canInteract { get { return (LamaGamma.Components.CanInteract)GetComponent(GameStateComponentsLookup.CanInteract); } }
    public bool hasCanInteract { get { return HasComponent(GameStateComponentsLookup.CanInteract); } }

    public void AddCanInteract(bool newValue) {
        var index = GameStateComponentsLookup.CanInteract;
        var component = (LamaGamma.Components.CanInteract)CreateComponent(index, typeof(LamaGamma.Components.CanInteract));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCanInteract(bool newValue) {
        var index = GameStateComponentsLookup.CanInteract;
        var component = (LamaGamma.Components.CanInteract)CreateComponent(index, typeof(LamaGamma.Components.CanInteract));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCanInteract() {
        RemoveComponent(GameStateComponentsLookup.CanInteract);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameStateMatcher {

    static Entitas.IMatcher<GameStateEntity> _matcherCanInteract;

    public static Entitas.IMatcher<GameStateEntity> CanInteract {
        get {
            if (_matcherCanInteract == null) {
                var matcher = (Entitas.Matcher<GameStateEntity>)Entitas.Matcher<GameStateEntity>.AllOf(GameStateComponentsLookup.CanInteract);
                matcher.componentNames = GameStateComponentsLookup.componentNames;
                _matcherCanInteract = matcher;
            }

            return _matcherCanInteract;
        }
    }
}
