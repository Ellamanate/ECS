//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public WindowListenerComponent windowListener { get { return (WindowListenerComponent)GetComponent(GameStateComponentsLookup.WindowListener); } }
    public bool hasWindowListener { get { return HasComponent(GameStateComponentsLookup.WindowListener); } }

    public void AddWindowListener(System.Collections.Generic.List<IWindowListener> newValue) {
        var index = GameStateComponentsLookup.WindowListener;
        var component = (WindowListenerComponent)CreateComponent(index, typeof(WindowListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWindowListener(System.Collections.Generic.List<IWindowListener> newValue) {
        var index = GameStateComponentsLookup.WindowListener;
        var component = (WindowListenerComponent)CreateComponent(index, typeof(WindowListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWindowListener() {
        RemoveComponent(GameStateComponentsLookup.WindowListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameStateMatcher {

    static Entitas.IMatcher<GameStateEntity> _matcherWindowListener;

    public static Entitas.IMatcher<GameStateEntity> WindowListener {
        get {
            if (_matcherWindowListener == null) {
                var matcher = (Entitas.Matcher<GameStateEntity>)Entitas.Matcher<GameStateEntity>.AllOf(GameStateComponentsLookup.WindowListener);
                matcher.componentNames = GameStateComponentsLookup.componentNames;
                _matcherWindowListener = matcher;
            }

            return _matcherWindowListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public void AddWindowListener(IWindowListener value) {
        var listeners = hasWindowListener
            ? windowListener.value
            : new System.Collections.Generic.List<IWindowListener>();
        listeners.Add(value);
        ReplaceWindowListener(listeners);
    }

    public void RemoveWindowListener(IWindowListener value, bool removeComponentWhenEmpty = true) {
        var listeners = windowListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveWindowListener();
        } else {
            ReplaceWindowListener(listeners);
        }
    }
}
