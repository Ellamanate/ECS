//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LamaGamma.Components.SmoothingRotation smoothingRotation { get { return (LamaGamma.Components.SmoothingRotation)GetComponent(GameComponentsLookup.SmoothingRotation); } }
    public bool hasSmoothingRotation { get { return HasComponent(GameComponentsLookup.SmoothingRotation); } }

    public void AddSmoothingRotation(LamaGamma.Services.SmoothVector3 newValue) {
        var index = GameComponentsLookup.SmoothingRotation;
        var component = (LamaGamma.Components.SmoothingRotation)CreateComponent(index, typeof(LamaGamma.Components.SmoothingRotation));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSmoothingRotation(LamaGamma.Services.SmoothVector3 newValue) {
        var index = GameComponentsLookup.SmoothingRotation;
        var component = (LamaGamma.Components.SmoothingRotation)CreateComponent(index, typeof(LamaGamma.Components.SmoothingRotation));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSmoothingRotation() {
        RemoveComponent(GameComponentsLookup.SmoothingRotation);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSmoothingRotation;

    public static Entitas.IMatcher<GameEntity> SmoothingRotation {
        get {
            if (_matcherSmoothingRotation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SmoothingRotation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSmoothingRotation = matcher;
            }

            return _matcherSmoothingRotation;
        }
    }
}
