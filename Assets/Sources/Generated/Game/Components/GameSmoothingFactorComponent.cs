//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LamaGamma.Components.SmoothingFactor smoothingFactor { get { return (LamaGamma.Components.SmoothingFactor)GetComponent(GameComponentsLookup.SmoothingFactor); } }
    public bool hasSmoothingFactor { get { return HasComponent(GameComponentsLookup.SmoothingFactor); } }

    public void AddSmoothingFactor(float newValue) {
        var index = GameComponentsLookup.SmoothingFactor;
        var component = (LamaGamma.Components.SmoothingFactor)CreateComponent(index, typeof(LamaGamma.Components.SmoothingFactor));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSmoothingFactor(float newValue) {
        var index = GameComponentsLookup.SmoothingFactor;
        var component = (LamaGamma.Components.SmoothingFactor)CreateComponent(index, typeof(LamaGamma.Components.SmoothingFactor));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSmoothingFactor() {
        RemoveComponent(GameComponentsLookup.SmoothingFactor);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSmoothingFactor;

    public static Entitas.IMatcher<GameEntity> SmoothingFactor {
        get {
            if (_matcherSmoothingFactor == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SmoothingFactor);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSmoothingFactor = matcher;
            }

            return _matcherSmoothingFactor;
        }
    }
}
