//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UIEntity {

    public WindowFadeListenerComponent windowFadeListener { get { return (WindowFadeListenerComponent)GetComponent(UIComponentsLookup.WindowFadeListener); } }
    public bool hasWindowFadeListener { get { return HasComponent(UIComponentsLookup.WindowFadeListener); } }

    public void AddWindowFadeListener(System.Collections.Generic.List<IWindowFadeListener> newValue) {
        var index = UIComponentsLookup.WindowFadeListener;
        var component = (WindowFadeListenerComponent)CreateComponent(index, typeof(WindowFadeListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWindowFadeListener(System.Collections.Generic.List<IWindowFadeListener> newValue) {
        var index = UIComponentsLookup.WindowFadeListener;
        var component = (WindowFadeListenerComponent)CreateComponent(index, typeof(WindowFadeListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWindowFadeListener() {
        RemoveComponent(UIComponentsLookup.WindowFadeListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class UIMatcher {

    static Entitas.IMatcher<UIEntity> _matcherWindowFadeListener;

    public static Entitas.IMatcher<UIEntity> WindowFadeListener {
        get {
            if (_matcherWindowFadeListener == null) {
                var matcher = (Entitas.Matcher<UIEntity>)Entitas.Matcher<UIEntity>.AllOf(UIComponentsLookup.WindowFadeListener);
                matcher.componentNames = UIComponentsLookup.componentNames;
                _matcherWindowFadeListener = matcher;
            }

            return _matcherWindowFadeListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UIEntity {

    public void AddWindowFadeListener(IWindowFadeListener value) {
        var listeners = hasWindowFadeListener
            ? windowFadeListener.value
            : new System.Collections.Generic.List<IWindowFadeListener>();
        listeners.Add(value);
        ReplaceWindowFadeListener(listeners);
    }

    public void RemoveWindowFadeListener(IWindowFadeListener value, bool removeComponentWhenEmpty = true) {
        var listeners = windowFadeListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveWindowFadeListener();
        } else {
            ReplaceWindowFadeListener(listeners);
        }
    }
}
